import streamlit as st
from config import style
import pandas as pd
from modules.module_eval import afficher_evaluation, fonctionnement
from routes import redirection

# Style adaptatif pour le mode clair/sombre
st.markdown(style, unsafe_allow_html=True)

# En-t√™te principal
st.markdown("""
    <div class="main-header">
        <h1>üìù √âvaluation du mod√®le</h1>
        <p style="font-size: 1.2em; margin-top: 1rem;">
            Analyse des performances du mod√®le entra√Æn√© et/ou optimis√©
        </p>
    </div>
    """, unsafe_allow_html=True)

    
# V√©rification des √©l√©ments n√©cessaires
if not all(k in st.session_state for k in ["modele_final", "X_test", "y_test", "task"]):
    st.warning("‚ùå Veuillez d'abord entra√Æner un mod√®le (et splitter les donn√©es) dans l'onglet 3.")
    st.stop()
else:
    # R√©cup√©ration des objets depuis la session
    modele = st.session_state["modele_final"]
    X_test = st.session_state["X_test"]
    y_test = st.session_state["y_test"]
    task_type = st.session_state["task"]  # "classification" ou "r√©gression"

    # Expander fonctionnement
    fonctionnement(task_type)
    
    # √âvaluation
    afficher_evaluation(modele, X_test, y_test, task_type)
    
    # Redirection page suivante
    redirection("üîÆ Pr√©dictions", "5_Predictions")